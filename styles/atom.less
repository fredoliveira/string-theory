@import "ui-variables.less";
@import "ui-mixins.less";
@import "octicon-mixins";

.platform-darwin .close-icon:before, .platform-darwin .icon-x:before, .platform-darwin .icon.x:before {
  content: 'âœ•' !important;
}

.project-find, .find-and-replace {
  .btn-group-find .btn {
    .button-variant(@text-color-info);
  }

  .btn-group-replace .btn, .btn-group-replace-all .btn, {
    .button-variant(@text-color-warning);
  }

  .find-meta-container {
    top: 4px;

    span {
      font-size: 11px;
    }
  }
}

atom-notifications {
  .text(normal);
  top: 36px;
  right: 4px;

  .close {
    transition: all @transition-time ease;

    &:before {
      color: fade(@theme-background-color, 50%);
    }
  }

  .btn {
    font-size: 11px !important;
    height: 22px !important;
    line-height: 20px !important;

    &.close-all {
      color: fade(@theme-background-color, 40%) !important;
      border-color: fade(@theme-background-color, 40%) !important;

      &:hover {
        color: @text-color-highlight !important;
        background-color: fade(@theme-background-color, 40%) !important;
        border-color: fade(@theme-background-color, 0%) !important;
      }
    }
  }

  atom-notification {
    margin-bottom: 4px;
  }
}

.background-message .message, .background-message li {
  .text(subtle);
  font-size: 24px;

  .keystroke {
    .text(normal);
    color: @tooltip-key-text-color;
    background: @tooltip-key-background-color;
    font-size: 90%;
    border: 1px solid @tooltip-key-text-color;
    border-radius: @component-border-radius/2;
    margin-left: @component-padding/2;
  }
}

kbd {
  .text(normal);
  color: @tooltip-key-text-color;
  background: @tooltip-key-background-color;
  font-size: 90%;
  border: 1px solid @tooltip-key-text-color;
  border-radius: @component-border-radius/2;
  margin-left: @component-padding/2;
}

.well {
  border-radius: @component-border-radius;
}

// input

atom-text-editor[mini], atom-text-editor[mini].editor {
  transition: all @transition-time ease;
  color: @text-color-highlight;
  background-color: @input-background-color;
  border: 1px solid @input-background-color;
  border-radius: @component-border-radius;
  padding-left: @component-padding / 2;
  height: @input-height;
  max-height: @input-height;
  line-height: @input-height - 2px;

  .placeholder-text {
    .text(subtle);
    height: @input-height;
    line-height: @input-height - 2px;
  }

  .cursor {
    border-color: @text-color;
  }

  .selection .region {
    background-color: @background-color-highlight !important;
  }
}

atom-text-editor[mini].is-focused, atom-text-editor[mini].is-focused.editor {
  background-color: @input-background-color-active;

  &:hover {
    background-color: @input-background-color-active;
    color: @text-color-highlight;
  }

  .selection .region {
    background-color: @background-color-highlight !important;
  }
}

input[type="checkbox"] {
  &:focus {
    box-shadow: none !important;
  }

  &:before, &:after {
    background: @base-background-color;
  }
}

select.form-control {
  .button(@button-border-color);
  .text(normal);
  height: @input-height;
  line-height: @input-height;
  text-transform: none;

  &:focus, &:hover {
   background: @button-border-color !important;
   color: @base-background-color !important;
  }
}
